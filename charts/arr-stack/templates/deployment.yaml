{{ if .Values.ombi.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arr-stack.fullname" . }}-ombi
  labels:
    {{- include "arr-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: ombi
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "arr-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: ombi
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "arr-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: ombi
    spec:
      # Necessary for Pod to have a static hostname in order to expose ports:
      # https://docs.k8s-at-home.com/guides/pod-gateway/#exposing-routed-pod-ports-from-the-gateway
      hostname: arr-stack
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: ombi
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "1000"
            - name: GUID
              value: "1000"
            - name: TZ
              value: "America/Los_Angeles"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: ombi-config
      volumes:
        - name: ombi-config
          persistentVolumeClaim:
            claimName: {{ include "arr-stack.fullname" . }}-ombi-config-iscsi-pvc
        # - name: truenas-data
        #   persistentVolumeClaim:
        #     claimName: {{ include "arr-stack.fullname" . }}-truenas-data-pvc
        # - name: usenet-truenas-downloads
        #   persistentVolumeClaim:
        #     claimName: {{ include "arr-stack.fullname" . }}-truenas-usenet-downloads-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
---
{{ if .Values.sabnzbd.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arr-stack.fullname" . }}-sabnzbd
  labels:
    {{- include "arr-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: sabnzbd
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "arr-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: sabnzbd
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "arr-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: sabnzbd
        gluetun-vpn: "true"
    spec:
      hostname: sabnzbd
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: sabnzbd
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "lscr.io/linuxserver/sabnzbd:{{ .Values.sabnzbd.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "America/Los_Angeles"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: sabnzbd-config
            - mountPath: /data/usenet
              name: usenet-truenas-downloads
      volumes:
        - name: sabnzbd-config
          persistentVolumeClaim:
            claimName: {{include "arr-stack.fullname" .}}-sabnzbd-config-pvc
        - name: usenet-truenas-downloads
          persistentVolumeClaim:
            claimName: {{ include "arr-stack.fullname" . }}-truenas-usenet-downloads-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
---
{{ if .Values.radarr.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arr-stack.fullname" . }}-radarr
  labels:
    {{- include "arr-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: radarr
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "arr-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: radarr
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "arr-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: radarr
    spec:
      hostname: radarr
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: radarr
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "lscr.io/linuxserver/radarr:{{ .Values.radarr.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "America/Los_Angeles"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: radarr-config
            - mountPath: /data
              name: truenas-data
      volumes:
        - name: radarr-config
          persistentVolumeClaim:
            claimName: {{ include "arr-stack.fullname" . }}-radarr-config-iscsi-pvc
        - name: truenas-data
          persistentVolumeClaim:
            claimName: {{ include "arr-stack.fullname" . }}-truenas-data-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
---
{{ if .Values.sonarr.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arr-stack.fullname" . }}-sonarr
  labels:
    {{- include "arr-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: sonarr
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "arr-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: sonarr
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "arr-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: sonarr
    spec:
      hostname: sonarr
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: sonarr
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "lscr.io/linuxserver/sonarr:{{ .Values.sonarr.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "America/Los_Angeles"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: sonarr-config
            - mountPath: /data
              name: truenas-data
      volumes:
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: {{ include "arr-stack.fullname" . }}-sonarr-config-iscsi-pvc
        - name: truenas-data
          persistentVolumeClaim:
            claimName: {{ include "arr-stack.fullname" . }}-truenas-data-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
---
{{ if .Values.readarr.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arr-stack.fullname" . }}-readarr
  labels:
    {{- include "arr-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: readarr
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "arr-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: readarr
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "arr-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: readarr
    spec:
      hostname: readarr
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: readarr
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "lscr.io/linuxserver/readarr:{{ .Values.readarr.tag | default "develop" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "America/Los_Angeles"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: readarr-config
            - mountPath: /data
              name: truenas-data
      volumes:
        - name: readarr-config
          persistentVolumeClaim:
            claimName: {{ include "arr-stack.fullname" . }}-readarr-config-iscsi-pvc
        - name: truenas-data
          persistentVolumeClaim:
            claimName: {{ include "arr-stack.fullname" . }}-truenas-data-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
---
{{ if .Values.prowlarr.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arr-stack.fullname" . }}-prowlarr
  labels:
    {{- include "arr-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: prowlarr
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "arr-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: prowlarr
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "arr-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: prowlarr
    spec:
      hostname: prowlarr
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: prowlarr
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "lscr.io/linuxserver/prowlarr:{{ .Values.prowlarr.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "America/Los_Angeles"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: prowlarr-config
            - mountPath: /data
              name: truenas-data
      volumes:
        - name: prowlarr-config
          persistentVolumeClaim:
            claimName: {{ include "arr-stack.fullname" . }}-prowlarr-config-iscsi-pvc
        - name: truenas-data
          persistentVolumeClaim:
            claimName: {{ include "arr-stack.fullname" . }}-truenas-data-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
